@model Inventorizer_Models.ViewModels.ItemIndexViewModel

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}


<br />
<br />
<div class="alert alert-info hidden" role="alert">
    Loading market prices, please wait
</div>
<div class="border p-4 bg-white">
    <div class="row">
        <div class="col-9">
            <h2 class="text-info">Items</h2>
        </div>
        <div class=" col-3 text-right">
            <a asp-action="CreateOrUpdate" class="btn btn-info form-control">Add</a>
        </div>
    </div>
    <br />
    <div>
        @if (Model.Items.Count() > 0)
        {
            <table class="table table-striped border">
                <tr class="table-secondary">
                    <th>
                        Name
                    </th>
                    <th>
                        Price
                    </th>
                    <th>
                        Market Price
                    </th>
                    <th>
                        Gain/Loss
                    </th>
                    <th>
                        Category
                    </th>
                    <th>
                        Type
                    </th>
                    <th>
                        Date of Purchase
                    </th>
                    <th></th>
                </tr>
                @foreach (var item in Model.Items)
                {
                <tr>
                    <td class="item-name">
                        @item.Name
                    </td>
                    <td class="price">
                        @item.Price
                    </td>
                    <td class="price market-price">
                        
                    </td>
                    <td class="gain-loss">
                        
                    </td>
                    <td>
                        @item.Category.Name
                    </td>
                    <td>
                        @if (item.ItemDetail != null)
                        {
                            @item.ItemDetail.Type
                        }
                        else
                        {
                            <span>--</span>
                        }
                    </td>
                    <td class="date-of-purchase">
                        @item.PurchaseDate
                    </td>
                    <td class="align-left">
                        <a class="btn btn-primary text-white" asp-action="CreateOrUpdate" asp-route-Id="@item.Item_Id">
                            Edit
                        </a>
                        <a class="btn btn-info text-white" asp-action="CreateOrUpdateDetail" asp-route-Id="@item.Item_Id">
                            Details
                        </a>
                        <a class="btn btn-danger text-white" asp-action="Delete" asp-route-Id="@item.Item_Id">
                            Delete
                        </a>
                    </td>
                </tr>
                }
            </table>

            <a asp-action="Index"
            asp-route-pageIndex="@(Model.PageIndex - 1)"
            class="btn btn-default @prevDisabled">
                Previous
            </a>
            <a asp-action="Index"
            asp-route-pageIndex="@(Model.PageIndex + 1)"
            class="btn btn-default @nextDisabled">
                Next
            </a>
        }
        else
        {
            <p>There are no items yet</p>
        }
    </div>
</div>